<?xml version="1.0" encoding="UTF-8" ?>
<einit>
<!-- you will need to modify this file -->
<!-- <core>
  <commands>
   <include>
    <directory s="local" />
   </include>
  </commands>
 </core> -->

 <configuration>
  <system>
   <swap device="/dev/sdb3" affinity="0" />
  </system>

  <network>
   <hostname s="localhost" />
   <domainname s="local" />

   <wireless>
    <ssid s="default" />
   </wireless>

<!-- example for a static network configuration, use with the commented module using the shell-net-eth1-static template from below -->
<!--   <interfaces>
    <eth1 address="10.6.0.2/16" network="10.6.0.0/16" gateway="10.6.0.1" />
   </interfaces> -->
  </network>

  <peripherals>
   <keyboard layout="us" />
  </peripherals>

  <kernel>
   <modules>
    <usb s="" />
    <bluetooth s="" />
    <hid s="" />
    <sound s="" />
    <sensors s="i2c-isa eeprom w83627ehf" />
    <dvb s="b2c2-flexcop-pci" />
    <ethernet s="uli526x" />
    <arbitrary s="evdev psmouse" />
   </modules>

   <module>
    <ath0 s="ath_pci" />
   </module>
  </kernel>

  <storage>
<!-- fstab -->
   <fstab>
<!-- This variable defines all the sources for your fstab. you could add
     "legacy", like in the example below, to make eINIT parse your /etc/fstab
     file as well as all the internal nodes.
     If you intend to do that, remove the nodes in this file for / and /boot
     (NOT all the others in einit.xml, /dev and the others are required!).
     Do note that the fstab format is rather limited in design, and that some
     options recognised by linux's mount(8) command will make einit's mounter
     fail - most notably that's the "loop" and "encryption=" options.

     NEVER remove the configuration fstab-source! -->
<!--    <source s="configuration:legacy" /> -->

    <node mountpoint="/boot" device="/dev/BOOT" options="noatime:noauto" />
    <node mountpoint="/" device="/dev/ROOT" fs="ext3" options="noatime" />

<!-- HINT: this can help if you have issues with SCSI-devices being brought up only after einit is started
    <node mountpoint="/" device="/dev/ROOT" fs="ext3" options="noatime" before-mount="sleep 2" /> -->

<!-- example for other mountpoints -->
<!-- <node mountpoint="/usr/portage" device="/dev/sdb1" fs="reiserfs" options="noatime" />
    <node mountpoint="/usr" device="/dev/sdc1" fs="ext3" options="noatime" />
    <node mountpoint="/opt" device="/dev/sdb2" fs="ext3" options="noatime" /> -->

<!-- example for using md-volumes -->
<!-- <node mountpoint="/media/storage-3" device="/dev/md0" fs="reiserfs" before-mount="modprobe raid5; mdadm -A -a md /dev/md0" options="noatime" /> -->

<!-- example for using nfs-volumes -->
<!-- <node mountpoint="/media/storage-1" device="host:/media/storage-1" fs="nfs" />
    <node mountpoint="/media/storage-0" device="chronos:/media/storage-0" fs="nfs" /> -->

<!-- this should be a good idea... but apparently causes problems with beryl/compiz + not everyone has enough ram to do it this way -->
<!--    <node mountpoint="/tmp" fs="tmpfs" /> -->

<!-- use this if you don't have usb built into your kernel -->
<!--    <node id="usbfs-mount-node" mountpoint="/proc/bus/usb" fs="usbfs" options="critical" before-mount="modprobe usbcore" /> -->

   </fstab>
  </storage>

  <compatibility>
<!-- utmp/wtmp management: you'll need to enable the utmp service
     BUG: not implemented, yet -->
   <sysv utmp="yes" wtmp="yes">
    <distribution s="auto">
     <gentoo>
<!-- in case you wish to use gentoo-ish init.d scripts, use this:
     NOTE: this should only be used with gentoo-ish init.d scripts, as they need special treatment -->
<!--      <init.d path="/mnt/etc/init.d/" /> -->
<!-- use this to make einit parse gentoo's runlevels as einit modes.
     NOTE: until someone defines a list with gentoo<>einit aliases, you'll
      get lots of unknown dependencies
     you also shouldn't set "exclusive" to true. just... don't do it, it'll
     override all the modes that are defined in the xml configuration with
     gentoo's runlevel data which means lots of important things will be
     missing - like mount/critical... -->
<!--      <runlevels path="/mnt/etc/runlevels" exclusive="false" /> -->
     </gentoo>
    </distribution>
<!-- in case you wish to use init.d scripts, use this:
     NOTE: this does NOT work with gentoo's init.d scripts! -->
<!--    <init.d path="/etc/init.d/" process-rc.d="yes" /> -->

<!-- enable the initctl service to make einit try and emulate standard sysv
     initctl commands, i.e. make the shutdown/reboot/halt commands work - this
     node is set by default, but the service is not. -->
<!--    <initctl s="/dev/initctl" i="0600" /> -->
   </sysv>

<!-- not yet implemented
   <initng>
    <i-files s="/etc/initng" />
    <transformations>
    </transformations>
   </initng>

   <upstart />
   <jinit />
   <cinit />
   <launchd />
   <bsd /> -->
  </compatibility>
 </configuration>

 <services>
<!-- both of the following would define a net-eth1 module, one using dhcp, the other with a static address from above -->
<!--  <virtual>
   <module>
    <shell id="shell-net-eth1-dhcp"
     based-on-template="template-shell-net-dhcp"
     interface="eth1" />
    <shell id="shell-net-eth1-static"
     based-on-template="template-shell-net-static"
     interface="eth1" />
   </module>
  </virtual> -->

  <prefer>
   <xdm s="daemon-kdm:daemon-entrance" />
   <kern-alsa s="shell-kern-audio-alsa" />
  </prefer>

  <alias>
<!-- service groups -->
   <network group="net-lo:net-eth0" seq="most" />
   <video group="kern-nvidia" seq="any-iop" />
   <audio group="alsa:kern-sound" seq="most" />
   <avahi group="avahi-dnsconfd" seq="any-iop" />
   <samba group="smbd:nmbd" seq="any-iop" />
   <printing group="hpiod:hplip:cupsd" seq="any-iop" />
  </alias>

<!-- example alias: localmount is the same as mount/local -->
<!--  <alias id="localmount" s="mount/local" /> -->

<!-- example override: on regular systems, einit-tty will only need mount/system, but if you'd like
     to use quingy and have the terminals controlled using einit-tty, then you will need mount/critical
     if /usr is on its own partition (due to libquingy) -->
<!--  <override>
   <module id="einit-tty" requires="mount/critical" />
  </override> -->

<!-- example override, probably useful for lvm users:
     this should make einit mount mount/system-nodes, i.e. /dev, /sys and /proc
     before trying to mount the root-filesystem -->
<!--  <override>
   <module id="einit-mount-root" requires="mount/system" />
   <module id="einit-mount-system" requires="sysconf" />
  </override> -->
 </services>

 <mode id="default" base="boot">
  <enable services="audio:portmap:clock:xdm:swap:mount/remote:tts" />
  <ttys s="tty2-regular:tty3-regular:tty4-regular:tty5-regular:tty6-regular" />
 </mode>
</einit>
