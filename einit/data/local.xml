<?xml version="1.0" encoding="UTF-8" ?>
<einit>
<!-- you will need to modify this file -->
 <configuration>

  <system>
<!-- kexec-to-reboot: used to determine if you wish to reboot via kexec (for broken BIOSes, or speed) -->
<!-- default value: -->
<!--   <kexec-to-reboot b="no" /> -->
<!-- use this to use reboot with what's available in /proc and a custom kernel from /boot (you need to make
     your /boot mount automatically for this to work, or place a kernel in / and use that) -->
<!--   <kexec-to-reboot b="yes" use-proc="yes" kernel-image="/boot/kernel-2.6.19-gentoo-r5" /> -->
  </system>

<!-- you may or may not need something like the following: -->
  <kernel>
   <modules>
<!-- these are fairly arbitrary, <X s="" /> creates kern-X to load modules and stuffs them into the 'modules' group for you -->
    <mouse s="evdev" />
   </modules>
  </kernel>

  <compatibility>
<!-- utmp/wtmp management: you'll need to enable the utmp service
     BUG: not implemented, yet -->
   <sysv utmp="yes" wtmp="yes" />
  </compatibility>
 </configuration>

 <services>
<!-- the following are a couple of examples for 'prefer lines'.
     using that technique, you can prefer some modules for services that are
     provided by multiple services, however, you may find it easier to just use
     a module's RID instead of a multi-call service name. for example, instead
     of specifying "displaymanager" when all you want is gdm, you may instead
     want to specify "v-gdm" in your modes.xml, whereever you keep your
     modes. alternatively, you can specify 'inderect' preferences on multi-
     service module(-sets). an example of this would be the 'logger' service,
     which is (among others) provided by v-metalog, which also provides
     'metalog' as a service. by specifying both 'logger' and 'metalog', you're
     indirectly adding a prefer-line like <logger s="v-metalog" />.
     same for specifying both "logger" and "v-metalog". the latter form
     may be more reliable (since v-metalog is always unambiguous, whereas
     "metalog" is not). -->

<!--  <prefer>
   <displaymanager s="v-kdm:v-entrance" />
   <logger s="v-metalog:v-syslog-ng:v-syslog" />
   <kern-alsa s="v-kern-audio-alsa" />
   <kern-arbitrary s="v-kern-module-autoload.d" />
   <antivirus s="v-clamd" />
  </prefer> -->

  <alias>
<!-- service groups -->
<!-- you really don't want to remove net-lo or fqdn from network, or stuff will break -->
   <network group="net-lo:net-eth0" seq="most" />
<!-- or kern-ati if you have an ATI card -->
   <video group="kern-nvidia" seq="any-iop" />
<!-- kern-sound is the list-based module loader.
     if you want alsa module auto-detection, replace with kern-alsa -->
   <audio group="alsa:kern-sound" seq="most" />
   <avahi group="avahi-dnsconfd" seq="any-iop" />
<!-- add winbindd if you need it -->
   <samba group="smbd:nmbd" seq="all" />
   <printing group="hpiod:hplip:cupsd" seq="any-iop" />
  </alias>

  <!-- example alias: localmount is the same as mount-local -->
  <!--  <alias id="localmount" s="mount-local" /> -->

  <!-- example override: on regular systems, einit-tty will only need mount-system, but if you'd like
       to use quingy and have the terminals controlled using einit-tty, then you will need mount-critical
     if /usr is on its own partition (due to libquingy) -->
<!--  <override>
 <module id="einit-tty" requires="mount-critical" />
  </override> -->

 </services>
</einit>
