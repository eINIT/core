<?xml version="1.0" encoding="UTF-8" ?>
<einit>
 <core>
  <settings>
   <module>
<!-- use this to disable the compatibility modules -->
<!-- <load pattern-allow=".*\.so" pattern-disallow="^compatibility.*" /> -->
    <load pattern-allow=".*\.so" />
   </module>
  </settings>
  <scheduler>
   <shutdown-function-suffixes s="linux" />
  </scheduler>

  <commands-include>
   <directory s="local" />
   <directory s="modules" />
  </commands-include>

  <if match="core-mode:sandbox">
   <settings>
    <module-path s="lib/einit" />
    <configuration-path s="etc/einit/" />
   </settings>
   <commands-include-file s="sandbox.xml" />
   <else>
    <settings>
     <module-path s="/lib/einit" />
     <configuration-path s="/etc/einit/" />
    </settings>
    <commands-include-file s="local.xml" />
   </else>
  </if>

<!--  <mode s="init" /> -->
 </core>

 <configuration>
<!-- A note on the configuration variables in this file: If it appears in this file, and it also
   appears in local.xml (or whatever overlay you're loading), then the definition in local.xml
   will take preference (unless it's something where all entries are loaded, like fstab-nodes).
   i.e.: you do not need to modify the entries in both files, only the one in local.xml! -->
  <system>
   <ctrl-alt-del b="disabled" />
   <daemon-spawn-timeout i="20" />
   <daemon-term-timeout-primary i="10" />
   <daemon-term-timeout-secondary i="2" />
   <shell s="/bin/sh -c" />
   <shell-exec-timeout i="20" />
   <proc-path s="/proc" />
  </system>

  <environment>
   <global id="PATH" s="/bin:/sbin:/usr/bin:/usr/sbin" />
   <global id="TERM" s="linux" />
   <safe PATH="/bin:/sbin:/usr/bin:/usr/sbin" TERM="dumb" />
  </environment>

  <network>
   <hostname s="localhost" />
   <domainname s="local" />

   <interfaces>
    <source s="sys:proc" />
    <lo address="127.0.0.1/8" network="127.0.0.0/8" gateway="127.0.0.1" />
   </interfaces>

   <dhcp>
    <timeout s="60"/>
   </dhcp>
  </network>

  <peripherals>
   <keyboard layout="us" />
   <pointing-device>
    <gpm device="/dev/input/mice" type="ps2" />
   </pointing-device>
  </peripherals>

  <feedback>
   <visual>
    <std-io stdin="/dev/tty1" stdout="/dev/tty1" stderr="/dev/tty11" console="/dev/tty12" activate-vt="1" kernel-vt="12" />
<!-- better verbosity on tty10: -->
<!--    <std-io stdin="/dev/tty1" stdout="/dev/tty1" stderr="/dev/tty11" console="/dev/tty12" activate-vt="1" kernel-vt="12" verbose-output="/dev/tty10" /> -->
    <use-ansi-codes b="true" />
    <shutdown-failure-timeout i="3" />
    <broadcast-constraints s="/dev/(tty[1-9][12]?|pts/.*)" />
    <reset-shutdown-broadcast-messages b="true" />
<!-- set to true to get feedback on the current switch's status -->
    <calculate-switch-status b="false" />
   </visual>

   <visual-edje>
    <theme-path s="etc/einit/edje" />
    <theme-default s="einit.edj" />
    <theme-default-component s="einit/splash" />
   </visual-edje>

   <aural>
    <tts>
     <synthesizer-command s="/usr/bin/festival --tts --pipe" />
     <vocalising-threshold i="6" />
    </tts>
   </aural>
  </feedback>

  <ipc>
   <control-socket s="/etc/einit/control" i="0600" />
  </ipc>

  <audio>
   <alsa-mixer file="/etc/asound.state" />
  </audio>

  <bluetooth>
   <hidd options="" />
  </bluetooth>

  <tty>
   <manage-utmp b="true" />

<!-- tty initialisation -->
   <tty1-regular dev="/dev/tty1" command="/sbin/agetty 38400 tty1" restart="yes" />
   <tty2-regular dev="/dev/tty2" command="/sbin/agetty 38400 tty2" restart="yes" />
   <tty3-regular dev="/dev/tty3" command="/sbin/agetty 38400 tty3" restart="yes" />
   <tty4-regular dev="/dev/tty4" command="/sbin/agetty 38400 tty4" restart="yes" />
   <tty5-regular dev="/dev/tty5" command="/sbin/agetty 38400 tty5" restart="yes" />
   <tty6-regular dev="/dev/tty6" command="/sbin/agetty 38400 tty6" restart="yes" />

   <tty-panic dev="/dev/tty8" command="/sbin/agetty 38400 tty8" restart="yes" PANIC="yes" />
  </tty>

  <video>
   <intel>
    <resolution x="1280" y="1024" bpp="32" mode="5c" />
   </intel>
  </video>

<!-- not much of this is implemented, yet -->
  <compatibility>
   <sysv utmp="yes" wtmp="yes">
    <simulate-runlevel now="3" />
    <if match="core-mode:sandbox">
     <initctl s="etc/.initctl" i="0600" />
     <else>
      <initctl s="/dev/initctl" i="0600" />
     </else>
    </if>

<!-- this variable is used to bind runlevels to einit modes -->
    <runlevel-mode-relations runlevel0="power-down" runlevel1="single" runlevel2="default" runlevel3="default" runlevel4="default" runlevel5="default" runlevel6="power-reset" runlevelS="single" runlevels="single" />
   </sysv>

<!-- not yet implemented
   <initng>
    <i-files s="/etc/initng" />
    <transformations>
    </transformations>
   </initng>

   <upstart />
   <jinit />
   <cinit />
   <launchd />
   <bsd /> -->
  </compatibility>

<!-- mount settings -->
  <storage>
   <update-steps s="block-devices:metadata" />
   <mtab-source s="legacy" />
   <maintain-mtab b="yes" s="/etc/mtab" />
   <filesystem>
    <label-readers s="linux" />
    <guessing-order s="ext4:ext3:ext2:reiser4:reiserfs:xfs:jfs:ufs:udf" />
   </filesystem>
   <mountpoints>
    <no-umount s="/dev:/proc:/sys" />
    <critical s="/usr:/var" />
   </mountpoints>
<!-- parametre 1 is the filesystem type, parametre 2 is the device -->
   <fsck-command s="pexec-options no-pipe; /sbin/fsck -a -T -t %1$s %2$s" />

   <block-devices>
    <dev-constraints s="/dev/([shm]d[a-z]?[0-9]*)" />
    <source s="dev" />
   </block-devices>

   <fstab>
<!-- NEVER remove the configuration fstab-source! -->
    <source s="configuration" />

<!-- you'll probably need to leave these as they are, einit needs them to boot properly -->
<!-- things got a little more complicated with udev lately... -->
    <node mountpoint="/dev" fs="tmpfs"
     manager="/sbin/udevd"
     after-mount='
      echo "feedback|notice|seeding /dev";
      if test -d /lib/udev/devices; then cp -a /lib/udev/devices/* /dev; fi;
      ln -snf /proc/self/fd /dev/fd;
      ln -snf fd/0 /dev/stdin;
      ln -snf fd/1 /dev/stdout;
      ln -snf fd/2 /dev/stderr;
      if test -e /proc/kcore; then ln -snf /proc/kcore /dev/core; fi;

      if test ! -e /dev/console; then mknod /dev/console c 5 1 -m 0600; fi;

      echo "feedback|notice|creating device nodes";
      /sbin/udevstart&lt;/dev/console;' />
    <node mountpoint="/sys" fs="sysfs" />
    <node mountpoint="/proc" fs="proc" />

    <node id="usbfs-mount-node" mountpoint="/proc/bus/usb" fs="usbfs" options="critical" />
    <node mountpoint="/dev/shm" fs="tmpfs" device="shm" before-mount="mkdir -p /dev/shm" options="critical" />
    <node mountpoint="/dev/pts" fs="devpts" before-mount="mkdir -p /dev/pts" options="critical" />
    <node mountpoint="/var/run" fs="tmpfs" options="critical" />
<!--    <node mountpoint="/var/log" fs="tmpfs" options="critical" />    -->
   </fstab>
  </storage>

  <command>
<!-- the command to run to remove a module from the kernel -->
   <rmmod s="/sbin/modprobe -r" />
  </command>

  <program-options>
   <cpufreq-governor s="ondemand" />
   <cpufreq-cpus s="0 1" />
   <hwclock s="--utc" />
  </program-options>
 </configuration>

 <information>
  <filesystem>
<!-- all-purpose filesystems -->
   <type id="ext2" flags="rw" />
   <type id="ext3" flags="rw" />
   <type id="reiserfs" flags="rw" />
   <type id="reiser4" flags="rw" />
   <type id="xfs" flags="rw" />
   <type id="jfs" flags="rw" />

<!-- special-purpose filesystems -->
   <type id="tmpfs" flags="volatile:rw" />
   <type id="squashfs" />
   <type id="romfs" />
   <type id="cramfs" />

<!-- network filesystems -->
   <type id="nfs" flags="network" />

<!-- dos-ish filesystems -->
   <type id="vfat" flags="rw" />
   <type id="ntfs" />

<!-- popular on cd/dvd media -->
   <type id="iso9660" />
   <type id="udf" flags="rw" />

<!-- internal-use filesystems -->
   <type id="unionfs" />
   <type id="proc" flags="rw:volatile" />
   <type id="sysfs" flags="rw:volatile" />
  </filesystem>
 </information>

 <services>
  <virtual>
   <module>
<!-- Power Management Services -->
    <daemon id="daemon-apmd"
     name="APMd"
     provides="apmd"
     requires="mount/critical"
     command="/usr/sbin/apmd"
     restart="yes" />

    <daemon id="daemon-acpi"
     name="Advanced Configuration and Power Interface daemon"
     provides="acpi"
     requires="mount/critical"
     command="/usr/sbin/acpid --foreground"
     restart="yes" />

    <shell id="shell-cpufreq"
     name="Cpufreq Governor"
     provides="cpufreq"
     requires="mount/critical:acpi"
     enable="for i in ${configuration_program_options_cpufreq_cpus};
      do /usr/bin/cpufreq-set --cpu $i --governor ${configuration_program_options_cpufreq_governor} ;
      done; /bin/true"
     disable="for i in ${configuration_program_options_cpufreq_cpus} ;
      do /usr/bin/cpufreq-set --cpu $i --governor performance ;
      done; /bin/true"
     variables="configuration-program-options-cpufreq-governor:configuration-program-options-cpufreq-cpus" />

    <daemon id="daemon-atieventsd"
     name="atieventsd - ATI external events daemon"
     provides="atieventsd"
     requires="acpi"
     command="/opt/ati/sbin/atieventsd --nodaemon"
     restart="yes" />

<!-- Desktop Services -->
    <daemon id="daemon-dbus"
     name="D-BUS system messagebus"
     provides="dbus"
     requires="mount/critical"
     prepare="rm -rf /var/run/dbus; mkdir -p /var/run/dbus; rm -f /var/run/dbus.pid; dbus-uuidgen --ensure"
     command="dbus-daemon --system --nofork"
     cleanup="[[ -S /var/run/dbus/system_bus_socket ]] &amp;&amp; rm -f /var/run/dbus/system_bus_socket"
     restart="yes" />

    <daemon id="daemon-hald"
     name="Hardware Abstraction Layer Daemon"
     provides="hal"
     requires="mount/critical:dbus"
     command="/usr/sbin/hald --daemon=no --use-syslog"
     restart="yes" />

<!-- Logger Services -->
    <daemon id="daemon-metalog"
     name="Syslogger (metalog)"
     provides="syslog"
     requires="mount/critical"
     command="/usr/sbin/metalog"
     restart="yes" />

    <daemon id="daemon-syslog-ng"
     name="Syslogger (syslog-ng)"
     provides="syslog"
     requires="mount/critical"
     command="/usr/sbin/syslog-ng -F"
     restart="yes" />

    <daemon id="daemon-syslog"
     name="Syslogger (syslog)"
     provides="syslog"
     requires="mount/critical"
     command="/sbin/syslogd -n"
     restart="yes" />

<!-- Misc Services -->
    <daemon id="daemon-tts-festival"
     name="TTS (festival)"
     provides="festival:speechd:tts"
     requires="mount/critical:audio"
     command="/usr/bin/festival --server -b /etc/festival/server.scm"
     restart="yes" />

    <daemon id="daemon-xcompmgr"
     name="X11 (xcompmgr)"
     provides="x11-composite"
     requires="x11"
     command="/usr/bin/xcompmgr -c"
     DISPLAY=":0.0"
     restart="yes" />

    <daemon id="daemon-boinc"
     name="BOINC client"
     provides="boinc"
     requires="mount/critical"
     command="cd /var/lib/boinc; boinc_client"
     restart="yes" />

<!-- Network Services -->
    <daemon id="daemon-sshd"
     name="SSHd"
     provides="sshd"
     requires="network:mount/critical"
     command="/usr/sbin/sshd -D"
     restart="yes" />

    <daemon id="daemon-privoxy"
     name="Privoxy Daemon"
     provides="privoxy"
     requires="network:mount/critical"
     command="/usr/sbin/privoxy --no-daemon /etc/privoxy/config"
     restart="yes" />

    <daemon id="daemon-tor"
     name="TOR Daemon"
     provides="tor"
     requires="network:mount/critical"
     command="/usr/bin/tor"
     restart="yes" />

    <daemon id="daemon-portmap"
     name="Portmap Daemon"
     provides="portmap"
     requires="mount/critical"
     command="/sbin/portmap -d"
     restart="yes" />

    <shell id="shell-clock-ntpdate"
     name="Set the system clock using ntpdate"
     provides="ntpdate"
     requires="mount/critical:network"
     enable="/sbin/hwclock --hctosys ${configuration_program_options_hwclock};
     ntpdate -b pool.ntp.org"
     disable="/sbin/hwclock --systohc ${configuration_program_options_hwclock};
              /bin/true"
     variables="configuration-program-options-hwclock" />

    <daemon id="daemon-smbd"
     name="Samba-daemon"
     provides="smbd"
     requires="mount/local:net-lo:nmbd"
     command="/usr/sbin/smbd -F -s /etc/samba/smb.conf"
     restart="yes" />

     <shell id="shell-nmbd"
      name="NetBIOS name server"
      provides="nmbd"
      requires="mount/local:net-lo"
      pid="/var/run/samba/nmbd.pid"
      prepare="[ ! -e /var/run/samba ] &amp;&amp; mkdir /var/run/samba ];
               [ -f /var/run/samba/nmbd.pid ] &amp;&amp; rm -rf /var/run/samba/nmbd.pid"
      enable="nmbd -D"
      disable="killall -9 nmbd"
      restart="yes" />

    <shell id="shell-firestarter"
     name="firestarter"
     provides="firestarter"
     requires="mount/critical:net-lo"
     prepare="if [ ! -f /etc/firestarter/firestarter.sh ] ; then
               firestarter --generate-scripts;
              fi"
     enable="firestarter --start"
     disable="firestarter --stop"
     restart="yes" />

    <daemon id="daemon-netplugd"
     name="netplugd -- network cable hotplug management daemon"
     provides="netplugd"
     requires="ipc"
     command="netplugd -F"
     restart="yes" />

    <daemon id="deamon-dhcdbd"
     name="dhcdbd"
     provides="dhcdbd"
     requires="dbus"
     command="rm -f /var/run/dhcdbd.pid; dbus-launch dhcdbd -sn"
     restart="yes" />

    <daemon id="daemon-NetworkManager"
     name="NetworkManager"
     provides="NM"
     requires="dhcdbd"
     prepare="[ ! -d /var/run/NetworkManager ] &amp;&amp; mkdir /var/run/NetworkManager;
              [ ! -d /var/run/console ] &amp;&amp; mkdir /var/run/console"
     command="NetworkManager --no-daemon"
     restart="yes" />

    <shell id="shell-cpufreq"
     name="Cpufreq Governor"
     provides="cpufreq"
     requires="mount/critical:acpi"
     enable="for i in ${configuration_program_options_cpufreq_cpus};
      do /usr/bin/cpufreq-set --cpu $i --governor ${configuration_program_options_cpufreq_governor} ;
      done; /bin/true"
     disable="for i in ${configuration_program_options_cpufreq_cpus} ;
      do /usr/bin/cpufreq-set --cpu $i --governor performance ;
      done; /bin/true"
     variables="configuration-program-options-cpufreq-governor:configuration-program-options-cpufr

    <daemon id="daemon-ntpd"
     name="ntpd"
     provides="ntpd"
     requires="mount/critical:net-lo"
     command="ntpd -n"
     restart="yes" />

    <daemon id="daemon-avahi-dnsconfd"
     name="avahi-dnsconfd"
     provides="avahi-dnsconfd"
     requires="avahi-daemon"
     command="avahi-dnsconfd"
     restart="yes" />

    <daemon id="deamon-avahi-daemon"
     name="avahi-daemon"
     provides="avahi-daemon"
     requires="net-lo:mount/critical"
     command="avahi-daemon"
     restart="yes" />

    <shell id="shell-lisa"
     name="LAN Information Server (LISA)"
     provides="lisa"
     requires="network:mount/critical"
     enable="/usr/kde/3.5/bin/lisa --config=/etc/conf.d/lisa -q"
     disable="/usr/bin/killall lisa" />

<!-- Server Services -->
    <shell id="shell-apache2"
     name="httpd - Apache Hypertext Transfer Protocol Server"
     provides="apache2"
     requires="mount/critical:net-lo"
     pid="/var/run/apache2.pid"
     opts="-D DEFAULT_VHOST"
     root="/usr/lib/apache2"
     config="/etc/apache2/httpd.conf"
     prepare="[ ! -e /var/log/apache2 ] &amp;&amp; mkdir /var/log/apache2;
              [ -f /var/log/apache2/ssl_scache ] &amp;&amp; rm /var/log/apache2/ssl_scache"
     enable="pexec-options no-pipe; apache2 ${opts} -d ${root} -f ${config} -k start&amp;"
     disable="killall -9 -q apache2"
     restart="yes" />

    <daemon id="daemon-lighttpd"
     name="HTTPd (Lighty)"
     provides="httpd"
     requires="mount/local:net-lo"
     command="/usr/sbin/lighttpd -D -f /etc/lighttpd/lighttpd.conf"
     restart="yes" />

    <shell id="shell-dovecot"
     name="IMAP/POP3 server (Dovecot)"
     provides="dovecot"
     requires="network:mount/critical:mysqld"
     enable="/usr/sbin/dovecot"
     disable="/usr/bin/killall dovecot" />

    <shell id="shell-postfix"
     name="postfix"
     uid="postfix"
     provides="mta"
     requires="network:mount/critical"
     enable="/usr/sbin/postfix start"
     disable="/usr/sbin/postfix stop"
     reload="/usr/sbin/postfix reload" />

    <daemon id="daemon-mysqld"
     name="Database (MySQL)"
     provides="mysqld"
     requires="mount/local:net-lo"
     command="/usr/sbin/mysqld --defaults-file=/etc/mysql/my.cnf"
     restart="yes" />

<!-- Display Manager Services -->
    <shell id="shell-gdm"
     name="GDM - The GNOME Display Manager"
     provides="x11:gdm"
     requires="mount/critical:net-lo:kern-x11"
     pid="/var/run/gdm.pid"
     prepare="mkdir /var/log/gdm"
     enable="pexec-options no-pipe; gdm&amp;"
     disable="gdm-stop"
     restart="yes" />

    <daemon id="daemon-kdm"
     name="KDM - The KDE Display Manager"
     provides="x11:kdm"
     requires="mount/critical:net-lo:kern-x11"
     prepare="rm -f /var/run/kdm.pid"
     command="/usr/kde/3.5/bin/kdm -nodaemon"
     restart="yes" />

    <daemon id="daemon-xdm"
     name="XDM - The X Display Manager"
     provides="x11:xdm"
     requires="net-lo:video:mount/critical"
     command="/usr/bin/xdm -nodaemon"
     restart="yes" />

    <daemon id="daemon-entrance"
     name="XDM (Entrance)"
     provides="x11:entrance"
     command="/usr/bin/entrance"
     restart="yes"
     DISPLAY=":0.0"
     HOME="/root" />

<!-- System Services -->
    <shell id="shell-sysctl"
     name="sysctl - configure kernel parameters at runtime"
     provides="sysctl"
     requires="sysconf"
     enable="sysctl -q -p /etc/sysctl.conf"
     disable="/bin/true"
     restart="no" />

    <shell id="shell-clock-hwclock"
     name="Set the system clock using the hardware clock"
     provides="clock"
     requires="mount/system"
     enable="/sbin/hwclock --hctosys ${configuration_program_options_hwclock}"
     disable="/sbin/hwclock --systohc ${configuration_program_options_hwclock};
              /bin/true"
     variables="configuration-program-options-hwclock" />

    <shell id="shell-swap"
     name="Swap-Device(s)"
     provides="swap"
     requires="mount/system"
     enable="swapon ${configuration_system_swap_device}"
     disable="swapoff ${configuration_system_swap_device}"
     variables="configuration-system-swap/device" />

    <shell id="shell-keyboard"
     name="Console (Keyboard Layout)"
     provides="keyboard"
     requires="mount/local"
     enable="/bin/loadkeys ${configuration_peripherals_keyboard_layout}"
     disable="/bin/loadkeys us"
     variables="configuration-peripherals-keyboard/layout" />

    <shell id="shell-sensors"
     name="LM-Sensors"
     provides="sensors"
     requires="mount/critical:kern-hwmon"
     enable="/usr/bin/sensors -s"
     disable="/bin/true"
     variables="configuration-kernel-modules-sensors:configuration-command-rmmod" />

    <shell id="shell-915resolution"
     name="Resolution (Intel)"
     provides="video-intel-resolution"
     requires="mount/critical"
     enable="915resolution ${configuration_video_intel_resolution_mode} ${configuration_video_intel_resolution_x} ${configuration_video_intel_resolution_y} ${configuration_video_intel_resolution_bpp} &gt;&gt; /dev/null; /bin/true"
     disable="/bin/true"
     variables="configuration-video-intel-resolution/x:configuration-video-intel-resolution/y:configuration-video-intel-resolution/bpp:configuration-video-intel-resolution/mode" />

    <daemon id="daemon-ivman"
     name="Ikke's Volume Manager (IVMAN)"
     uid="ivman"
     gid="plugdev"
     provides="ivman"
     requires="hald"
     prepare="rm -f /var/run/ivman.pid"
     cleanup="rm -f /var/run/ivman.pid"
     command="/usr/bin/ivman --system --nofork"
     restart="yes" />

    <shell id="shell-irqbalance"
     name="irqbalance"
     provides="irqbalance"
     requires="mount/critical"
     enable="irqbalance"
     disable="/bin/true"
     restart="no" />

    <shell id="shell-fbsplash"
     name="fbsplash"
     provides="fbsplash"
     requires="mount/critical"
     enable="for TTY in ${configuration_feedback_visual_fbsplash_ttys} ; do
              splash_util --tty=${TTY} -m v -t ${configuration_feedback_visual_fbsplash_theme} -c setcfg ;
              splash_util --tty=${TTY} -m v -t ${configuration_feedback_visual_fbsplash_theme} -c setpic 2&gt;/dev/null ;
              splash_util --tty=${TTY} -c on ;
             done"
     disable="/bin/true"
     variables="configuration-feedback-visual-fbsplash-ttys:configuration-feedback-visual-fbsplash-theme" />

<!-- Multimedia Services -->
    <shell id="shell-mythtv-backend"
     name="MythTV Backend"
     provides="mythtv"
     requires="network:mount/critical:kern-dvb"
     enable="/usr/bin/mythbackend --logfile /var/log/mythtv/mythbackend --daemon"
     disable="killall mythbackend; /bin/true"
     HOME="/etc/mythtv"/>

    <shell id="shell-alsa"
     name="Advanced Linux Sound Architecture"
     provides="alsa"
     requires="mount/critical"
     enable="/usr/sbin/alsactl -f ${configuration_audio_alsa_mixer_file} restore;"
     disable="/usr/sbin/alsactl -f ${configuration_audio_alsa_mixer_file} store; /bin/true"
     variables="configuration-audio-alsa-mixer/file" />

    <daemon id="daemon-mpd"
     name="Music Player Daemon"
     provides="mpd"
     requires="mount/local"
     command="/usr/bin/mpd --no-create-db --no-daemon"
     restart="yes" />

<!-- Kernel Module Services -->
    <shell-template id="template-shell-kern-module-loader"
     name="Kernel Modules (${system})"
     provides="kern-${system}"
     requires="mount/system:ipc"
     enable="
      for x in ${configuration_kernel_modules_${system}};
       do echo $x; modprobe $x;
      done; /bin/true"
     disable="
      for x in ${configuration_kernel_modules_${system}}; do
       ${configuration_command_rmmod} $x;
      done; /bin/true"
     variables="configuration-kernel-modules-${system}:configuration-command-rmmod" />

    <shell id="shell-kern-ethernet"
     based-on-template="template-shell-kern-module-loader"
     disable="/bin/true"
     system="ethernet" />
    <shell id="shell-kern-sound"
     based-on-template="template-shell-kern-module-loader"
     disable="/bin/true"
     system="sound" />
    <shell id="shell-kern-dvb"
     based-on-template="template-shell-kern-module-loader"
     system="dvb" />
    <shell id="shell-kern-arbitrary"
     based-on-template="template-shell-kern-module-loader"
     disable="/bin/true"
     system="arbitrary" />
    <shell id="shell-kern-usb"
     based-on-template="template-shell-kern-module-loader"
     system="usb" />
    <shell id="shell-kern-hid"
     based-on-template="template-shell-kern-module-loader"
     system="hid" />
    <shell id="shell-kern-bluetooth"
     based-on-template="template-shell-kern-module-loader"
     system="bluetooth" />
    <shell id="shell-kern-x11"
     based-on-template="template-shell-kern-module-loader"
     system="x11" />
    <shell id="shell-kern-hwmon"
     based-on-template="template-shell-kern-module-loader"
     system="hwmon" />

<!-- Network Device Services -->
    <shell id="shell-net-loopback"
     name="Network (loopback)"
     provides="net-lo"
     enable="/sbin/ifconfig lo up 127.0.0.1/8"
     disable="ifconfig lo down" />

    <shell-template id="template-shell-net-static"
     name="Network (${interface}, static)"
     provides="net-${interface}"
     enable="/sbin/ifconfig ${interface} up ${configuration_network_interfaces_${interface}_address};
      route add -net ${configuration_network_interfaces_${interface}_network};
      route add default gw ${configuration_network_interfaces_${interface}_gateway}"
     disable="ifconfig ${interface} down"
     variables="configuration-network-interfaces-${interface}/.*" />

    <shell-template id="template-shell-net-dhcp"
     name="Network (${interface}, using DHCP)"
     provides="net-${interface}"
     requires="kern-ethernet:mount/critical"
     enable="pexec-options no-pipe; rm -f /var/run/dhcpcd-${interface}.pid; /sbin/dhcpcd -d -t ${configuration_network_dhcp_timeout} ${interface};"
     disable="killall dhcpcd; rm -f /var/run/dhcpcd-${interface}.pid;"
     variables="configuration-network-dhcp-timeout" />

    <shell id="shell-net-eth0-dhcp"
     based-on-template="template-shell-net-dhcp"
     interface="eth0" />

<!-- Cron Services -->
    <daemon id="daemon-fcron"
     name="Cron (fcron)"
     provides="cron"
     requires="mount/critical"
     command="/usr/sbin/fcron -f -c /etc/fcron/fcron.conf"
     restart="yes" />

    <daemon id="daemon-vixie-cron"
     name="Cron (Vixie)"
     provides="cron"
     requires="mount/local:net-lo"
     command="/usr/sbin/cron -n"
     restart="yes" />

<!-- Bluetooth Services -->
    <shell id="shell-bluez-hid2hci"
     name="Bluetooth (HID2HCI)"
     provides="bluetooth-hid2hci"
     requires="mount/local:kern-bluetooth"
     enable="/usr/sbin/hid2hci -0 -q"
     disable="/bin/true" />

    <shell id="shell-bluez-rfcomm"
     name="Bluetooth (RFCOMM)"
     provides="bluetooth-rfcomm"
     requires="mount/local:kern-bluetooth:bluetooth-hci"
     enable="/usr/bin/rfcomm -f /etc/bluetooth/rfcomm.conf bind all"
     disable="/usr/bin/rfcomm release all" />

    <daemon id="daemon-bluez-hcid"
     name="Bluetooth (HCId)"
     provides="bluetooth-hci"
     requires="mount/critical:kern-bluetooth"
     command="sleep 1 ; /usr/sbin/hcid -n -f /etc/bluetooth/hcid.conf"
     restart="yes" /> 

    <daemon id="daemon-bluez-sdpd"
     name="Bluetooth (SDPd)"
     provides="bluetooth-sdp"
     requires="mount/critical:kern-bluetooth:bluetooth-hci"
     command="/usr/sbin/sdpd -n"
     restart="yes" />

    <daemon id="shell-bluez-hidd"
     name="Bluetooth (HIDd)"
     provides="bluetooth-hid"
     requires="mount/critical:kern-bluetooth:bluetooth-hci"
     command="/usr/bin/hidd ${configuration_bluetooth_hidd_options} --server -n"
     restart="yes"
     variables="configuration-bluetooth-hidd/options" />

<!-- Printing Services -->
    <daemon id="daemon-cupsd"
     name="CUPS (Common Unix Printing System)"
     provides="cupsd"
     requires="network:syslog:mount/critical"
     prepare="[ ! -d /var/log/cups ] &amp;&amp; mkdir /var/log/cups"
     command="/usr/sbin/cupsd -F"
     restart="yes" />

    <daemon id="daemon-hplip"
     name="HP Linux Imaging and Printing System"
     provides="hplip"
     command="python /usr/share/hplip/hpssd.py -x"
     restart="yes" />

    <shell id="shell-hpiod"
     name="HP I/O Backend Daemon"
     provides="hpiod"
     enable="hpiod"
     disable="killall hpiod"
     restart="yes" />

   </module>
  </virtual>

 </services>

 <mode id="feedback">
  <enable services="feedback-textual" />
 </mode>
 <mode id="boot">
  <enable services="sysconf:mount/local:hostname:tty:keyboard:ipc:syslog:network:dbus:hal:utmp" critical="mount/critical:tty" />
  <ttys s="tty1-regular" />
 </mode>
 <mode id="default" base="boot">
  <enable services="audio:portmap:clock:xdm:swap:mount/remote" />
  <ttys s="tty2-regular:tty3-regular:tty4-regular:tty5-regular:tty6-regular" />
 </mode>
 <mode id="power-down">
  <disable services="all-but-feedback" />
  <ttys s="none" />
  <before-switch emit-event="power/mps-down-scheduled" />
<!--  <after-switch emit-event="power/mps-down-imminent" ipc="exec /etc/init.d/halt.sh;scheduler power-down" /> -->
  <after-switch emit-event="power/mps-down-imminent" ipc="scheduler power-down" />
 </mode>
 <mode id="power-reset" base="power-down">
  <ttys s="none" />
  <before-switch emit-event="power/reset-scheduled" />
<!--  <after-switch emit-event="power/reset-imminent" ipc="exec /etc/init.d/halt.sh;scheduler power-reset" /> -->
  <after-switch emit-event="power/reset-imminent" ipc="scheduler power-reset" />
 </mode>
</einit>
