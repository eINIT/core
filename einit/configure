#!/bin/sh
# -----------------
# einit configure script
# -----------------
# tiny configure script... i might consider adding more on this some other time...
# (i'm just trying to make sure I don't violate any licenses by specifically not using any non-LGPL GPL tools)
# -----------------
# Copyright (c) 2006, Magnus Deininger
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are permitted provided that
# the following conditions are met:
#
#    * Redistributions of source code must retain the above copyright notice, this list of conditions and the
#      following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and
#      the following disclaimer in the documentation and/or other materials provided with the distribution.
#    * Neither the name of the project nor the names of its contributors may be used to endorse or promote
#      products derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# -----------------

echo -n "checking options [";
for param in $@; do
	short=${param//=*/};
	if test "$short" = "--prefix"; then
		echo -n " PREFIX";
		PREFIX=${param##--prefix=};
	elif test "$param" = "--debug"; then
		echo -n " DEBUG";
		XCFLAGS="$XCFLAGS -DDEBUG -g";
	elif test "$param" = "--enable-sysv"; then
		echo -n " SYSV";
		XCFLAGS="$XCFLAGS -DSYSV";
		PMODULES="$PMODULES sysv";
	elif test "$param" = "--enable-linux"; then
		echo -n " LINUX";
		PMODULES="$PMODULES linux";
	elif test "$param" = "--help"; then
		echo -n " HELP";
		HELP="1";
	fi;
done;
echo " ]";

if test "$HELP" = "1"; then
	echo "Usage:
 ./configure [--prefix=path] [--enable-*] [--debug] [--help]

Options:
 --prefix=path    use this to set a path to install to (absolute!)
 --enable-sysv    enable compilation of sysv-compatibility functions
 --enable-linux   enable compilation of linux-specific modules
 --debug          will #define DEBUG.
 --help           display this text and exit.";
 exit;
fi;

echo -n "/etc/make.conf ["
if test -f /etc/make.conf; then
	echo -n " sourcing";
	source /etc/make.conf;
else
	echo -n " not found";
fi
echo " ]"

echo -n "checking for a default compiler... "
if test -n "$CC"; then
	echo "got one! ($CC)";
else
	echo "none set, defaulting to cc";
	CC=cc;
fi

echo "finding absolute include directory..."
INCLUDE="-I`pwd`/src/include";

echo -n "checking system type... "
CCL="\${CC} \${INCLUDE} \${CFLAGS} \${LDFLAGS}"
if test -n "`uname -a|grep -i 'darwin kernel'`"; then
	echo "Darwin";
	XCFLAGS="$XCFLAGS -DDARWIN -DPOSIX -DBSD";
	XDYNAMIC="";
	CCL="$CCL -bundle -Wl,-bundle_loader,`pwd`/src/einit";
elif test -n "`uname -a|grep -i 'Linux'`"; then
	echo "Linux";
	XCFLAGS="$XCFLAGS -DPOSIX -DLINUX";
	CCL="$CCL -shared";
	XDYNAMIC="-Wl,-export-dynamic";
	LPA="-lpthread";
else
	echo "(guess) generic posix-ish unix";
	XCFLAGS="$XCFLAGS -DPOSIX";
	CCL="$CCL -shared";
	XDYNAMIC="-Wl,-export-dynamic";
	LPA="-lpthread";
fi

echo "creating config.mk..."
echo "PREFIX = $PREFIX
ETCDIR = ${PREFIX}/etc/einit
LIBDIR = ${PREFIX}/lib
MODDIR = ${PREFIX}/lib/einit
BINDIR = ${PREFIX}/bin
SBINDIR = ${PREFIX}/sbin

INSTALL = install
IPARAM =
SOIPARAM = \${IPARAM}
BINIPARAM = \${IPARAM}

PMODULES = $PMODULES
INCLUDE = $INCLUDE

XDYNAMIC = $XDYNAMIC

CC = $CC
CFLAGS = $CFLAGS$XCFLAGS
LDFLAGS = $LDFLAGS
CCC = \${CC} \${INCLUDE} \${CFLAGS} \${LDFLAGS}
CCL = $CCL
LPA = $LPA" > config.mk

if test -e einit; then
	echo -n "cleaning the environment... "
	if make clean >/dev/null 2>&1; then
		echo "done";
	else
		echo "failed!";
	fi
fi

echo -n "creating dependency information... "
touch src/depend.mk
touch src/modules/depend.mk

if make depend > /dev/null 2>&1; then
	echo "done";
else
	echo "failed!";
fi
