Import(['env', 'InternalModules', 'ModulesLinux', 'ModulesBSD'])

InternalModuleObjects = ['#build/core/module-configuration.c']

def buildInternalModule(name, location, e):
 tm = name.replace('-', '_')
 return e.Object(location + '/' + name + '.c', CCFLAGS = '-Dthismodule=_' + tm + '_thismodule -Dself=_' + tm + '_self')

def buildInternalModuleA(name, e):
 if name in ModulesLinux:
  return buildInternalModule(name, 'linux', e)
 elif name in ModulesBSD:
  return buildInternalModule(name, 'bsd', e)
 else:
  return buildInternalModule(name, '.', e)

for x in InternalModules:
 InternalModuleObjects += buildInternalModuleA(x, env)

Export ('InternalModuleObjects')
