Import(['env', 'InstallDirModules', 'InstallDirBootstrap'])

env.Append (CPPPATH = ['../include']);

def buildModule(name, location, e):
 tm = name.replace('-', '_')
 e.Install(InstallDirModules, e.SharedLibrary(name, location + '/' + name + '.c', CCFLAGS = '-DEINIT_MODULE'))

def buildModuleBootStrap(name, e):
 tm = name.replace('-', '_')
 e.Install(InstallDirBootstrap, e.SharedLibrary(name, name + '.c', CCFLAGS = '-DEINIT_MODULE'))

BootStrapModules = ['bootstrap-configuration-stree', 'bootstrap-configuration-xml-expat']

Modules = ['feedback-visual-textual', 'fqdn', 'exec', 'mount', 'tty', 'process', 'shadow-exec', 'module-transformations', 'ipc-core-helpers', 'scheduler', 'functions-xml', 'module-xml', 'log', 'parse-sh', 'module-checkpoint', 'module-group', 'feedback-visual-psplash', 'module-logic-v4', 'module-network-v2', 'compile-c']

ModulesLinux = ['linux-edev', 'linux-mdev', 'linux-static-dev', 'linux-sysconf', 'linux-mount', 'linux-process', 'linux-kernel-modules', 'linux-udev', 'linux-hwclock', 'linux-hotplug', 'linux-cpufreq', 'linux-bootchart', 'linux-network', 'linux-network-wpa-supplicant', 'linux-network-bridge', 'linux-network-bonding']

ModulesCompatibility = ['compatibility-sysv-utmp', 'compatibility-sysv-initctl']

buildModuleBootStrap('bootstrap-configuration-stree', env)
buildModuleBootStrap('bootstrap-configuration-xml-expat', env.Clone (LIBS = 'expat-local', LIBPATH=['#expat']))

for x in Modules:
 buildModule(x, '.', env)

for x in ModulesLinux:
 buildModule(x, 'linux', env)

for x in ModulesCompatibility:
 buildModule(x, 'compatibility', env)

buildModule ('ipc-9p', '.', env.Clone (CPPPATH=['#libixp'], LIBS=['ixp-local'], LIBPATH=['#libixp']))
