Import(['env', 'InstallDirSbin', 'InstallDirLib', 'InstallDirLibBin', 'InternalModules', 'InstallDirInclude', 'AssemblyDir', 'ASMFunctionsAvailable', 'uname', 'InternalModuleObjects', 'coreStatic'])

import glob

AssemblyFunctions = []

for i in ASMFunctionsAvailable:
 AssemblyFunctions += [ AssemblyDir + '/' + i + '.S' ]

CodeSet = ['set-lowmem.c', 'set-common.c']
CodeITree = ['itree-trinary-splay.c']
CodeBTree = ['btree-splay.c']
CodeVTree = ['vtree-splay.c']
CodeSTree = ['tree-itree.c']

CodeCoreObjects = ['einit-core.c', 'module.c', 'ipc.c']
CodeCoreMonitorObjects = ['einit-monitor.c']

CodeLastRites = ['last-rites.c']
CodeEinitHelper = ['einit-helper.c']

CodeEinitFeedbackD = ['einit-feedback.c']
CodeEinitLogD = ['einit-log.c']

CodeEinitSysVD = ['tools/einit-sysvd.c']
CodeEinitBootChartD = ['tools/einit-bootchartd.c']

CodeLibEinit = AssemblyFunctions + ['libraries/libeinit.c', 'bitch.c', 'event.c', 'utility.c', 'exec.c', 'strings.c', 'sexp.c', 'ipc-client.c'] + CodeSet + CodeSTree + CodeBTree + CodeITree + CodeVTree

if uname == 'linux':
 CodeLibEinit += ['linux/process.c']

if uname == 'freebsd':
 CodeCoreMonitorObjects = [ 'freebsd/einit-monitor.c' ]
 einitMonitor = env.Program ('einit-monitor', CodeCoreMonitorObjects, LIBS=['util'])
else:
 einitMonitor = env.Program ('einit-monitor', CodeCoreMonitorObjects)

if uname == 'linux':
 env.Install (InstallDirLib, env.SharedLibrary ('einit', CodeLibEinit, SHLINKFLAGS='-shared -Wl,-soname,libeinit.so.3.0.0'))
else:
 env.Install (InstallDirLib, env.SharedLibrary ('einit', CodeLibEinit))

env.Install (InstallDirLib, env.StaticLibrary ('einit', CodeLibEinit))

cenv = env.Clone()
cenv.Append (LIBPATH = ['.'])
cenv.Append (LIBS=['einit'])

ccenv = cenv.Clone();

if coreStatic:
 ccenv.Append (CCFLAGS = '-static')
 ccenv.Append (LINKFLAGS = '-static')

ccenv.Install (InstallDirLibBin, ccenv.Program ('einit-core', CodeCoreObjects + InternalModuleObjects))

cenv.Install (InstallDirLibBin, cenv.Program ('einit-wtf', ['tools/einit-wtf.c']))
cenv.Install (InstallDirLibBin, cenv.Program ('einit-test',  ['tools/einit-test.c']))

cenv.Install (InstallDirLibBin, cenv.Program ('einit-helper', CodeEinitHelper))
cenv.Install (InstallDirLibBin, cenv.Program ('last-rites', CodeLastRites))

cenv.Install (InstallDirLibBin, cenv.Program ('einit-log', CodeEinitLogD))
cenv.Install (InstallDirLibBin, cenv.Program ('einit-bootchartd', CodeEinitBootChartD))

env.InstallAs (InstallDirSbin + '/einit', einitMonitor)
cenv.Install (InstallDirSbin, cenv.Program ('einit-sysvd', CodeEinitSysVD))

cenv.Install (InstallDirInclude + '/einit', glob.glob ('include/einit/*'))
cenv.Install (InstallDirInclude + '/einit-modules', glob.glob ('include/einit-modules/*'))

cursesEnv = cenv.Clone()
cursesEnv.Append (LIBS = ['curses'])
cursesEnv.Install (InstallDirLibBin, cursesEnv.Program ('einit-feedback', CodeEinitFeedbackD))
