<?xml version="1.0" encoding="UTF-8" ?>
<einit>
 <core>
  <settings>
   <xml-parser>
    <auto-create-missing-directories b="true" />
   </xml-parser>
   <configuration>
    <on-line-modifications save-to="/etc/einit/local/on-line-modifications.xml" />

    <multi-node-variables allow="^(core-((commands-include-(file|directory))|settings-modules))|configuration-(storage-fstab-(node|node-order)|edev-devicefile-rule)$" />
   </configuration>

<!-- example: use this to disable the compatibility modules -->
<!-- <modules id="primus" path="/lib/einit/modules" pattern-allow=".*\.so" pattern-disallow="^compatibility.*" /> -->
   <modules id="primus" path="/lib/einit/modules" pattern-allow=".*\.so" />

   <configuration-path s="/etc/einit/" />
  </settings>

  <scheduler>
   <shutdown-function-suffixes s="linux" />
<!-- niceness increments:
     'core' is relative to whatever the kernel set,
     'tasks' is relative to the value set by core -->
   <niceness core="0" tasks="0" />
  </scheduler>

  <module-logic>
   <init.d-path s="/etc/einit/init.d/" />
   <maintain-init.d s="/lib/einit/scripts/einit.d_erc.sh" b="true" />
  </module-logic>

  <commands>
   <include>
    <file s="local.xml" />
    <file s="network.xml" />
    <file s="fstab.xml" />
    <file s="modes.xml" />

    <directory path="/etc/einit/conf.d" />
    <directory path="/etc/einit/subsystems.d" />
    <directory path="/etc/einit/local" />
    <directory path="/etc/einit/modules" />

    <directory path="/etc/einit/rules.edev" />

    <directory path="/lib/einit/modules-xml" />
   </include>
  </commands>

<!-- These settings control the "error correction" settings, i.e. how likely
     einit is to kill itself over a (potentially recoverable) problem.
     255 always means "kill yourself", 0 always means "ignore it". The values
     in between indicate different levels of actions, 1 should be "warn about
     it on stderr"
     Default is to print a warning and continue. Don't forget: if einit dies
     or exits for whatever reason, and it's being used as "the init" then most
     kernels will panic and your system will die, so setting most of these to
     255 is probably a very, very bad idea. -->
  <mortality>
   <bad-malloc i="1" />
   <bad-stdio i="1" />
   <bad-regex i="1" />
   <bad-expat i="1" />
   <bad-dl i="1" />
   <bad-lookup i="1" />
   <bad-pthreads i="1" />
  </mortality>
<!--  <mode s="init" /> -->

 </core>
 <configuration>
<!-- A note on the configuration variables in this file: If it appears in this file, and it also
   appears in local.xml (or whatever overlay you're loading), then the definition in local.xml
   will take preference (unless it's something where all entries are loaded, like fstab-nodes).
   i.e.: you do not need to modify the entries in both files, only the one in local.xml! -->
  <system>
   <ctrl-alt-del b="disabled" />
   <daemon-spawn-timeout i="20" />
   <daemon-term-timeout-primary i="10" />
   <daemon-term-timeout-secondary i="2" />
   <shell s="/bin/sh -c" />
   <shell-exec-timeout i="20" />
   <proc-path s="/proc" />
   <log b="true" />
   <preload b="no" binaries="agetty:getty:sh:udevd:dhcpcd:pump:modprobe:rmmod" />

   <kexec-to-reboot b="no" />
   <kexec-calls
     load="/usr/sbin/kexec -l ${kernel-image} --append=&quot;${kernel-options}&quot;"
     load-initrd="/usr/sbin/kexec -l ${kernel-image} --append=&quot;${kernel-options}&quot; --initrd=&quot;${kernel-initrd}&quot;"
     execute="/usr/sbin/kexec -e" />

   <device-manager s="udev" />

   <hotplug>
    <support-legacy-hotplug-scripts b="yes" />
    <handler s="" />
   </hotplug>

   <coldplug b="yes" />
  </system>

  <environment>
   <global id="PATH" s="/bin:/sbin:/usr/bin:/usr/sbin:/opt/bin:/opt/sbin:/usr/local/bin:/usr/local/sbin" />
   <global id="TERM" s="linux" />
   <safe PATH="/bin:/sbin:/usr/bin:/usr/sbin:/opt/bin:/opt/sbin" TERM="dumb" />
  </environment>

  <kernel>
   <modules>
    <load-in-parallel b="no" />
    <autoload.d file="/etc/modules.autoload.d/kernel-2.6" />
   </modules>
  </kernel>

  <feedback>
   <textual b="true" />
   <fbsplash b="true" />
   <aural b="false" />

   <psplash s="no" />

   <visual>
    <std-io stdio="/dev/tty9" stderr="/dev/tty11" console="/dev/tty12" activate-vt="9" kernel-vt="12" boot-done-chvt="1" />
<!-- better verbosity on tty10: -->
<!--    <std-io stdio="/dev/tty1" stderr="/dev/tty11" console="/dev/tty12" activate-vt="1" kernel-vt="12" verbose-output="/dev/tty10" /> -->
    <use-ansi-codes b="true" />
    <shutdown-failure-timeout i="3" />
    <broadcast-constraints s="/dev/(tty[1-8][12]?|pts/.*)" />
    <reset-shutdown-broadcast-messages b="true" />

    <suppress-messages b="no" />
    <suppress-status-notices b="no" />

    <fbsplash>
     <ttys s="1 2 3 4 5 6" />
     <theme s="gentoo" />
    </fbsplash>

    <psplash>
     <fifo s="/dev/psplash_fifo" />
     <run s="export TMPDIR=&quot;/dev&quot;;
             psplash &amp;" />
    </psplash>

    <usplash>
     <fifo s="/dev/.initramfs/usplash_fifo" />
     <run s="mkdir -p /dev/.initramfs;
             usplash &amp;" />
    </usplash>

    <exquisite>
     <run s="cd /tmp; nohup exquisite -fb -fs -t /usr/share/exquisite/data/themes/default.edj &amp;" />
    </exquisite>
   </visual>

   <aural>
    <festival>
     <active b="no" />
    </festival>
   </aural>
  </feedback>

  <command>
<!-- the command to run to remove a module from the kernel -->
   <rmmod s="/sbin/modprobe -r" with-env="/sbin/modprobe -r ${module}" />
   <modprobe s="/sbin/modprobe" with-env="/sbin/modprobe ${module}" />

   <ip-flush with-env="ip addr flush dev ${interface}" />
   <create-bridge with-env="brctl addbr ${interface}" />
  </command>

 </configuration>

 <services>
  <alias>
   <samba group="nmbd:smbd" seq="all" />
  </alias>
  <prefer>
   <kern-alsa s="shell-kern-audio-alsa" />
   <feedback s="feedback-visual-textual" />
   <logger s="daemon-metalog:daemon-syslog-ng:daemon-syslog" />
  </prefer>
 </services>
</einit>
